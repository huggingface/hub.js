{
	"title": "ChatCompletionInput",
	"description": "Inputs for ChatCompletion inference",
	"type": "object",
	"properties": {
		"messages": {
			"type": "array",
			"items": {
				"oneOf": [
					{
						"$ref": "#/$defs/SystemMessage"
					},
					{
						"$ref": "#/$defs/UserMessage"
					},
					{
						"$ref": "#/$defs/AssistantMessage"
					}
				]
			}
		},
		"model": {
			"type": "string",
			"description": "ID of the model to use. See the model endpoint compatibility table for details on which models work with the Chat API."
		},
		"frequency_penalty": {
			"type": "number",
			"description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim."
		},
		"max_tokens": {
			"type": "integer",
			"description": "The maximum number of tokens that can be generated in the chat completion. The total length of input tokens and generated tokens is limited by the model's context length."
		},
		"seed": {
			"type": "integer",
			"description": "The random sampling seed."
		},
		"stop": {
			"type": "string",
			"description": "Up to 4 sequences where the API will stop generating further tokens."
		},
		"stream": {
			"type": "boolean",
			"description": "If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message."
		},
		"temperature": {
			"type": "number",
			"description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both."
		},
		"top_p": {
			"type": "number",
			"description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both."
		}
	},
	"$defs": {
		"SystemMessage": {
			"type": "object",
			"properties": {
				"role": {
					"const": "system",
					"description": "The role of the messages author, in this case system."
				},
				"content": {
					"type": "string",
					"description": "The contents of the system message."
				}
			},
			"required": ["role", "content"]
		},
		"UserMessage": {
			"type": "object",
			"properties": {
				"role": {
					"const": "user",
					"description": "The role of the messages author, in this case user."
				},
				"content": {
					"type": "string",
					"description": "The contents of the user message."
				}
			},
			"required": ["role", "content"]
		},
		"AssistantMessage": {
			"type": "object",
			"properties": {
				"role": {
					"const": "assistant",
					"description": "The role of the messages author, in this case assistant."
				},
				"content": {
					"type": "string",
					"description": "The contents of the assistant message."
				}
			},
			"required": ["role", "content"]
		}
	}
}
