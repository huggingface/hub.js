name: Hub - Version and Release

on:
  workflow_dispatch:
    inputs:
      newversion:
        type: choice
        description: "Semantic Version Bump Type"
        default: patch
        options:
          - patch
          - minor
          - major

concurrency:
  group: "push-to-main"

defaults:
  run:
    working-directory: packages/hub

jobs:
  version_and_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Needed to push the tag and the commit on the main branch, otherwise we get:
          # > Run git push --follow-tags
          # remote: error: GH006: Protected branch update failed for refs/heads/main.
          # remote: error: Changes must be made through a pull request. Required status check "lint" is expected.
          token: ${{ secrets.BOT_ACCESS_TOKEN }}
      - run: corepack enable
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: |
            packages/hub/pnpm-lock.yaml
            packages/doc-internal/pnpm-lock.yaml
          # setting a registry enables the NODE_AUTH_TOKEN env variable where we can set an npm token.  REQUIRED
          registry-url: "https://registry.npmjs.org"
      - run: pnpm install
      - run: git config --global user.name machineuser
      - run: git config --global user.email infra+machineuser@huggingface.co
      - run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          BUMPED_VERSION=$(node -p "require('semver').inc('$PACKAGE_VERSION', '${{ github.event.inputs.newversion }}')")
          # Update package.json with the new version
          node -e "const fs = require('fs'); const package = JSON.parse(fs.readFileSync('./package.json')); package.version = '$BUMPED_VERSION'; fs.writeFileSync('./package.json', JSON.stringify(package, null, '\t') + '\n');"
          pnpm --filter doc-internal run fix-cdn-versions
          git add ../..
          git commit -m "ðŸ”– @huggingface/hub $BUMPED_VERSION"
          git tag "hub-v$BUMPED_VERSION"

      - name: Make sure that the latest version of @huggingface/tasks is consistent with the local version
        run: |
          LOCAL_TASKS_VERSION=$(node -p "require('./package.json').version")
          REMOTE_TASKS_VERSION=$(npm view @huggingface/tasks version)

          # If the versions are different, error 
          if [ "$LOCAL_TASKS_VERSION" != "$REMOTE_TASKS_VERSION" ]; then
            echo "Error: The local @huggingface/tasks package version ($LOCAL_TASKS_VERSION) differs from the remote version ($REMOTE_TASKS_VERSION). Release halted."
            exit 1
          fi

          npm pack @huggingface/tasks
          mv huggingface-tasks-$LOCAL_TASKS_VERSION.tgz tasks-local.tgz

          npm pack @huggingface/tasks@$REMOTE_TASKS_VERSION
          mv huggingface-tasks-$REMOTE_TASKS_VERSION.tgz tasks-remote.tgz

          # Compute checksum of local tar. We need to extract both tar since the remote compression might be different
          tar -xf tasks-local.tgz
          LOCAL_CHECKSUM=$(cd package && tar --mtime='1970-01-01' --mode=755 -cf - . | sha256sum | cut -d' ' -f1)
          echo "Local package checksum: $LOCAL_CHECKSUM"

          rm -Rf package

          tar -xf tasks-remote.tgz
          REMOTE_CHECKSUM=$(cd package && tar --mtime='1970-01-01' --mode=755 -cf - . | sha256sum | cut -d' ' -f1)
          echo "Remote package checksum: $REMOTE_CHECKSUM"

          rm -Rf package

          if [ "$LOCAL_CHECKSUM" != "$REMOTE_CHECKSUM" ]; then
            echo "Checksum Verification Failed: The local @huggingface/tasks package differs from the remote version. Release halted. Local Checksum: $LOCAL_CHECKSUM, Remote Checksum: $REMOTE_CHECKSUM"
            exit 1
          fi
          echo "Checksum Verification Successful: The local and remote @huggingface/tasks packages are consistent. Proceeding with the @huggingface/widgets package release. Local Checksum: $LOCAL_CHECKSUM, Remote Checksum: $REMOTE_CHECKSUM."
        working-directory: packages/tasks

      - run: pnpm publish --no-git-checks .
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: git pull --rebase && git push --follow-tags
      # hack - reuse actions/setup-node@v3 just to set a new registry
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://npm.pkg.github.com"
      # Disable for now, until github supports PATs for writing github packages (https://github.com/github/roadmap/issues/558)
      # - run: pnpm publish --no-git-checks .
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Update Doc"
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: doc-build
          token: ${{ secrets.BOT_ACCESS_TOKEN }}
